package algorithm;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import db.DBConnection;
import db.DBConnectionFactory;
import entity.Item;

public class GeoRecommendation {
	public List<Item> recommendItems(String userId, double lat, double lon) {
		List<Item> recommendedItems = new ArrayList<>();
		DBConnection conn = DBConnectionFactory.getConnection();
		try {
			// Step 1. Get all favorite items
			Set<String> favoriteItemIds = conn.getFavoriteItemIds(userId);

			// Step 2. Get all categories of favorite items, sort by count
			Map<String, Integer> allCategories = new HashMap<>();
			for (String itemId : favoriteItemIds) {
				Set<String> categories = conn.getCategories(itemId);
				for (String category : categories) {
					allCategories.put(category, allCategories.getOrDefault(category, 0) + 1);
				}
			}

			// Step 3. Do search based on category, filter out favorite items & sort by
			// distance

			// Step 4. Filter out visited events

		} finally {
			conn.close();
		}
		return recommendedItems;
	}

}
